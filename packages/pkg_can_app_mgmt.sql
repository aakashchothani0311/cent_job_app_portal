CREATE OR REPLACE PROCEDURE CREATE_CAN_APP (
    PI_CAN_ID IN CANDIDATE_APPLICATION.CANDIDATE_ID%TYPE, 
    REQ_ID IN CANDIDATE_APPLICATION.REQ_ID%TYPE, 
    STATUS IN CANDIDATE_APPLICATION.STATUS%TYPE DEFAULT 'submitted'
) AS
BEGIN
    INSERT INTO CANDIDATE_APPLICATION
        (CANDIDATE_ID, REQ_ID, STATUS)
    VALUES
        (PI_CAN_ID, REQ_ID, LOWER(STATUS));
    
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error creating application: ' || SQLERRM);
        
END CREATE_CAN_APP;
/


CREATE OR REPLACE PROCEDURE WITHDRAW_APP (
    PI_CAN_ID IN CANDIDATE_APPLICATION.CANDIDATE_ID%TYPE,
    PI_REQ_ID IN CANDIDATE_APPLICATION.REQ_ID%TYPE
) AS
    C_WITHDRAWN_STATUS CONSTANT CANDIDATE_APPLICATION.STATUS%TYPE := 'withdrawn';
    
    NULL_CND_ID_EXEC EXCEPTION;
    NULL_REQ_ID_EXEC EXCEPTION;
BEGIN
    IF PI_CAN_ID IS NULL THEN
        RAISE NULL_CND_ID_EXEC;
    END IF;
    
     IF PI_REQ_ID IS NULL THEN
        RAISE NULL_REQ_ID_EXEC;
    END IF;
    
    UPDATE CANDIDATE_APPLICATION
    SET STATUS = C_WITHDRAWN_STATUS
    WHERE CANDIDATE_ID = PI_CAN_ID AND REQ_ID = PI_REQ_ID;
    
    UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Application for Job Requsition ' || PI_REQ_ID || ' withdrawn successfully.'));
    
EXCEPTION
    WHEN NULL_CND_ID_EXEC THEN
        UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Error withdrawing APPLICATION: CANDIDATE_ID is needed to withdraw the application.'));
                    
    WHEN NULL_REQ_ID_EXEC THEN
        UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Error withdraing APPLICATION: REQ_ID is needed to withdraw the application.'));
    
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error withdrawing application: ' || SQLERRM);
        
END WITHDRAW_APP;
/

-- APP CREATION (DUP VALIDATION)
-- CAN APPLY/ WITHDRAW
-- CAN ACCEPTS/ REJECTS