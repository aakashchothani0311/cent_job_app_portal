CREATE OR REPLACE PACKAGE PKG_RECRUITER_MANAGEMENT AS
    PROCEDURE CREATE_RECRUITER_PROFILE(
        PI_FNAME IN USERS.FIRSTNAME%TYPE DEFAULT NULL,
        PI_LNAME IN USERS.LASTNAME%TYPE DEFAULT NULL,
        PI_EMAIL IN USERS.EMAIL%TYPE,
        PI_UNAME IN USERS.USERNAME%TYPE,
        PI_PW IN USERS.PASSWORD%TYPE,
        PI_COMPANY_ID IN COMPANIES.COMPANY_ID%TYPE
    );
    
    PROCEDURE UPDATE_RECRUITER_PROFILE(
        PI_FNAME IN USERS.FIRSTNAME%TYPE DEFAULT 'DEFAULT_FLAG',
        PI_LNAME IN USERS.LASTNAME%TYPE DEFAULT 'DEFAULT_FLAG',
        PI_UNAME IN USERS.USERNAME%TYPE,
        PI_PW IN USERS.PASSWORD%TYPE DEFAULT 'DEFAULT_FLAG'
    );
END PKG_RECRUITER_MANAGEMENT;
/

CREATE OR REPLACE PACKAGE BODY PKG_RECRUITER_MANAGEMENT AS
    -- PROCEDURE TO CREATE RECRUITER USER
    PROCEDURE CREATE_RECRUITER_PROFILE(
        PI_FNAME IN USERS.FIRSTNAME%TYPE DEFAULT NULL,
        PI_LNAME IN USERS.LASTNAME%TYPE DEFAULT NULL,
        PI_EMAIL IN USERS.EMAIL%TYPE,
        PI_UNAME IN USERS.USERNAME%TYPE,
        PI_PW IN USERS.PASSWORD%TYPE,
        PI_COMPANY_ID IN COMPANIES.COMPANY_ID%TYPE
    ) AS
        V_COMPANY_ID NUMBER;
        V_USER_ID NUMBER := -1;
        NULL_COMPANY_ID_EXEC EXCEPTION;
        
    BEGIN
        IF PI_COMPANY_ID IS NULL THEN
            RAISE NULL_COMPANY_ID_EXEC;
        END IF;

        BEGIN
            SELECT COMPANY_ID INTO V_COMPANY_ID
            FROM COMPANIES
            WHERE LOWER(COMPANY_ID) = LOWER(PI_COMPANY_ID);
        EXCEPTION
            WHEN NO_DATA_FOUND THEN 
                RAISE NULL_COMPANY_ID_EXEC; 
        END;
        
        V_USER_ID := USER_MGMT.CREATE_USER(PI_FNAME, PI_LNAME, PI_EMAIL, PI_UNAME, PI_PW);
        
        IF V_USER_ID != -1 THEN
            -- INSERT INTO RECRUITER TABLE
            INSERT INTO RECRUITERS (USER_ID, COMPANY_ID)
            VALUES (V_USER_ID, V_COMPANY_ID);
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('USER CREATED SUCCESSFULLY. USER_ID: ' || V_USER_ID));
            COMMIT;
        ELSE
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Due to an error Transactions are rolled back'));
            ROLLBACK;
        END IF;
        
    EXCEPTION
        WHEN NULL_COMPANY_ID_EXEC THEN
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Error creating PROFILE: COMPANY_ID cannot be empty or does not exist.'));
        WHEN OTHERS THEN
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('ERROR: ' || SQLERRM));
        ROLLBACK;
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Due to an error Transactions if any are rolled back'));         
    END CREATE_RECRUITER_PROFILE;

    -- PROCEDURE TO UPDATE RECRUITER USER
    PROCEDURE UPDATE_RECRUITER_PROFILE(
        PI_FNAME IN USERS.FIRSTNAME%TYPE DEFAULT 'DEFAULT_FLAG',
        PI_LNAME IN USERS.LASTNAME%TYPE DEFAULT 'DEFAULT_FLAG',
        PI_UNAME IN USERS.USERNAME%TYPE,
        PI_PW IN USERS.PASSWORD%TYPE DEFAULT 'DEFAULT_FLAG'
    ) AS
        V_USER_EXISTS NUMBER DEFAULT 0;
        
        NULL_USERNAME_EXEC EXCEPTION;
        
   BEGIN
        IF PI_UNAME IS NULL OR TRIM(PI_UNAME) IS NULL THEN
            RAISE NULL_USERNAME_EXEC;
        END IF;
        
        -- Check if the recruiter exists
        SELECT COUNT(U.USER_ID) INTO V_USER_EXISTS
        FROM USERS U
        JOIN RECRUITERS R ON U.USER_ID = R.USER_ID
        WHERE LOWER(U.USERNAME) = LOWER(PI_UNAME);
        
        IF V_USER_EXISTS > 0 THEN
            V_USER_EXISTS := USER_MGMT.UPDATE_USER(PI_FNAME, PI_LNAME, PI_UNAME, PI_PW);
           
            IF V_USER_EXISTS != -1 THEN
                UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Profile updated successfully for user: ' || PI_UNAME));
            END IF;
        ELSE
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Update failed for user: ' || PI_UNAME || ' DOES NOT EXIST'));
        END IF;
        
    EXCEPTION
        WHEN NULL_USERNAME_EXEC THEN
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Error updating User Account: Username cannot be empty.'));
            
        WHEN OTHERS THEN
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('ERROR: An unexpected error occurred while updating the user: ' || SQLERRM));
            ROLLBACK; 
            UTIL_PKG.ADD_NEW_LINE(UTIL_PKG.ADD_TAB('Due to an error Transactions if any are rolled back'));
            
    END UPDATE_RECRUITER_PROFILE;

END PKG_RECRUITER_MANAGEMENT;
/

CREATE OR REPLACE SYNONYM REC_MGMT
FOR ADMIN_SUPER_USER.PKG_RECRUITER_MANAGEMENT;