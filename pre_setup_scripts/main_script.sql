-- USER table cleanup with creation 
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'USERS';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE USERS CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "USERS" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE USERS (
        USER_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_USERS PRIMARY KEY,
        FIRSTNAME VARCHAR2(50) CONSTRAINT NN_USERS_FIRSTNAME NOT NULL,
        LASTNAME VARCHAR2(50) CONSTRAINT NN_USERS_LASTNAME NOT NULL,
        EMAIL VARCHAR2(70) CONSTRAINT NN_USERS_EMAIL NOT NULL CONSTRAINT UQ_USERS_EMAIL UNIQUE,
        USERNAME VARCHAR2(50) CONSTRAINT NN_USERS_USERNAME NOT NULL CONSTRAINT UQ_USERS_USERNAME UNIQUE,
        PASSWORD VARCHAR2(50) CONSTRAINT NN_USERS_PASSWORD NOT NULL,
        IS_ACTIVE NUMBER(1) DEFAULT 1 CONSTRAINT CHK_USERS_IS_ACTIVE CHECK (IS_ACTIVE IN (0, 1))
    )';
    DBMS_OUTPUT.PUT_LINE('Table "USERS" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- ADDRESS table cleanup with creation
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'ADDRESS';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE ADDRESS CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "ADDRESS" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE ADDRESS (
        ADDRESS_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_ADDRESS PRIMARY KEY,
        STREET1 VARCHAR2(100) CONSTRAINT NN_ADDRESS_STREET1 NOT NULL,
        STREET2 VARCHAR2(100),
        CITY VARCHAR2(40) CONSTRAINT NN_ADDRESS_CITY NOT NULL,
        COUNTY VARCHAR2(50),
        STATE VARCHAR2(50) CONSTRAINT NN_ADDRESS_STATE NOT NULL,
        ZIPCODE VARCHAR2(50),
        COUNTRY VARCHAR2(50) CONSTRAINT NN_ADDRESS_COUNTRY NOT NULL
    )';
    DBMS_OUTPUT.PUT_LINE('Table "ADDRESS" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- CANDIDATE table cleanup with creation
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'CANDIDATES';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE CANDIDATES CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "CANDIDATES" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE CANDIDATES (
        CANDIDATE_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_CANDIDATES PRIMARY KEY,
        USER_ID NUMBER CONSTRAINT NN_CANDIDATES_USER_ID NOT NULL,
        ADD_ID NUMBER CONSTRAINT NN_CANDIDATES_ADD_ID NOT NULL,
        PHONE VARCHAR2(15),
        AGE NUMBER(2),
        GENDER VARCHAR2(15),
        VETERAN VARCHAR2(100),
        DISABILITY VARCHAR2(100),
        DATE_OF_JOIN TIMESTAMP WITH LOCAL TIME ZONE DEFAULT SYSDATE CONSTRAINT NN_CANDIDATES_DATE_OF_JOIN NOT NULL,
        CONSTRAINT FK_CANDIDATES_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
        CONSTRAINT FK_CANDIDATES_ADD_ID FOREIGN KEY (ADD_ID) REFERENCES ADDRESS(ADDRESS_ID),
        CONSTRAINT CHK_CANDIDATES_AGE CHECK (AGE > 16),
        CONSTRAINT CHK_CANDIDATES_GENDER CHECK (GENDER IN (''male'', ''female'')),
        CONSTRAINT CHK_CANDIDATES_VET_STATUS CHECK (VETERAN IN (''do not wish to disclose'', ''not a veteran'', ''I am a protected veteran'')),
        CONSTRAINT CHK_CANDIDATES_DISABILITY CHECK (DISABILITY IN (''do not wish to disclose'', ''no, i do not have a disability'', ''yes, I have a disability''))
    )';
    DBMS_OUTPUT.PUT_LINE('Table "CANDIDATES" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- WORK_EXP cleanup with creation - Candidate's Work Experience
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'WORK_EXP';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE WORK_EXP CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "WORK_EXP" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE WORK_EXP (
        WORK_EXP_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_WORK_EXP PRIMARY KEY,
        CANDIDATE_ID NUMBER CONSTRAINT NN_WORK_EXP_CANDIDATE_ID NOT NULL,
        COMPANY_NAME VARCHAR2(100) CONSTRAINT NN_WORK_EXP_COMPANY_NAME NOT NULL,
        JOB_TITLE VARCHAR2(100) CONSTRAINT NN_WORK_EXP_JOB_TITLE NOT NULL,
        START_DATE TIMESTAMP WITH LOCAL TIME ZONE,
        END_DATE TIMESTAMP WITH LOCAL TIME ZONE,
        DESCRIPTION VARCHAR2(2000),
        CONSTRAINT FK_WORK_EXP_CANDIDATE_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES CANDIDATES(CANDIDATE_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "WORK_EXP" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- EDUCATION table cleanup with creation
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'EDUCATION';
     
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE EDUCATION CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "EDUCATION" dropped.');
    END IF;
        
    EXECUTE IMMEDIATE 'CREATE TABLE EDUCATION (
        EDUCATION_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT FK_EDUCATION PRIMARY KEY,
        CANDIDATE_ID NUMBER CONSTRAINT NN_EDUCATION_CANDIDATE_ID NOT NULL,
        UNIVERSITY_NAME VARCHAR2(150) CONSTRAINT NN_EDUCATION_UNIVERSITY_NAME NOT NULL,
        DEGREE VARCHAR2(50) CONSTRAINT NN_EDUCATION_DEGREE NOT NULL,
        MAJOR VARCHAR2(100),
        START_DATE TIMESTAMP WITH LOCAL TIME ZONE,
        END_DATE TIMESTAMP WITH LOCAL TIME ZONE,
        DEGREE_COMPLETED NUMBER(1) DEFAULT 1 CONSTRAINT CHK_EDUCATION_DEGREE_COMPLETED CHECK (DEGREE_COMPLETED IN (0,1)) ,
        CONSTRAINT FK_EDUCATION_CANDIDATE_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES CANDIDATES(CANDIDATE_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "EDUCATION" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- RESUME table creation
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'RESUME';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE RESUME CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "RESUME" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE RESUME (
        RESUME_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_RESUME PRIMARY KEY,
        CANDIDATE_ID NUMBER CONSTRAINT NN_RESUME_CANDIDATE_ID NOT NULL,
        RES_DOC CLOB CONSTRAINT NN_RESUME_RES_DOC NOT NULL,
        DATE_UPLOADED TIMESTAMP WITH LOCAL TIME ZONE DEFAULT SYSDATE NOT NULL,
        DESCRIPTION VARCHAR2(50),
        CONSTRAINT FK_RESUME_CANDIDATE_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES CANDIDATES(CANDIDATE_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "RESUME" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- SKILLS table creation - all the skills present on the platform
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'SKILLS';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE SKILLS CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "SKILLS" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE SKILLS (
        SKILL_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_SKILLS PRIMARY KEY,
        SKILL_NAME VARCHAR2(100) CONSTRAINT UQ_SKILLS_SKILL_NAME UNIQUE CONSTRAINT NN_SKILLS_SKILL_NAME NOT NULL
    )';
    DBMS_OUTPUT.PUT_LINE('Table "SKILLS" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- CANDIDATE_SKILLS Join Table
DECLARE
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'CANDIDATE_SKILLS';

    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE CANDIDATE_SKILLS CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "CANDIDATE_SKILLS" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE CANDIDATE_SKILLS (
        CAN_SKILL_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_CANDIDATE_SKILLS PRIMARY KEY,
        CANDIDATE_ID NUMBER CONSTRAINT NN_CANDIDATE_SKILLS_CANDIDATE_ID NOT NULL,
        SKILL_ID NUMBER CONSTRAINT NN_CANDIDATE_SKILLS_SKILL_ID_ NOT NULL,
        CONSTRAINT FK_CANDIDATE_SKILLS_CAN_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES CANDIDATES(CANDIDATE_ID),
        CONSTRAINT FK_CANDIDIDATE_SKILLS_SKILL_ID FOREIGN KEY (SKILL_ID) REFERENCES SKILLS(SKILL_ID),
        CONSTRAINT UQ_CAN_SKILL UNIQUE(CANDIDATE_ID, SKILL_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "CANDIDATE_SKILLS" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- COMPANY table cleanup with creation
DECLARE ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'COMPANIES';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE COMPANIES CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "COMPANIES" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE COMPANIES (
        COMPANY_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_COMPANIES PRIMARY KEY,
        ADD_ID NUMBER,
        NAME VARCHAR2(50) CONSTRAINT NN_COMPANIES_NAME NOT NULL CONSTRAINT UQ_COMPANIES_NAME UNIQUE,
        EMAIL VARCHAR2(50) CONSTRAINT NN_COMPANIES_EMAIL NOT NULL,
        PHONE VARCHAR2(15) CONSTRAINT NN_COMPANIES_PHONE NOT NULL,
        IS_ACTIVE NUMBER(1) DEFAULT 1 CONSTRAINT CHK_COMPANIES_IS_ACTIVE CHECK (IS_ACTIVE IN (0,1)),
        CONSTRAINT FK_COMPANIES_ADD_ID FOREIGN KEY (ADD_ID) REFERENCES ADDRESS(ADDRESS_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "COMPANIES" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- RECRUITER table cleanup with creation
DECLARE 
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'RECRUITERS';
    
    IF ROWS_COUNT > 0  THEN 
        EXECUTE IMMEDIATE 'DROP TABLE RECRUITERS CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "RECRUITERS" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE RECRUITERS (
        RECRUITER_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_RECRUITERS PRIMARY KEY,
        USER_ID NUMBER CONSTRAINT NN_RECRUITERS_USERID NOT NULL,
        COMPANY_ID NUMBER CONSTRAINT NN_RECRUITERS_COMPANYID NOT NULL,
        CONSTRAINT FK_RECRUITERS_USERID FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
        CONSTRAINT FK_RECRUITERS_COMPANYID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(COMPANY_ID),
        CONSTRAINT UQ_RECRUITERS_USERID_COMPANYID UNIQUE (USER_ID, COMPANY_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "RECRUITERS" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- JOB_REQUISITION table creation
DECLARE 
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'JOB_REQUISITION';
    
     IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE JOB_REQUISITION CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "JOB_REQUISITION" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE JOB_REQUISITION (
        REQ_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_JOB_REQUISITION PRIMARY KEY,
        COMPANY_ID NUMBER CONSTRAINT NN_JOB_REQUISITION_COMPANYID NOT NULL,
        RECRUITER_ID NUMBER CONSTRAINT NN_JOB_REQUISITION_RECRUITERID NOT NULL,
        JOB_TITLE VARCHAR2(100) CONSTRAINT NN_JOB_REQUISITION_JOB_TITLE NOT NULL,
        JOB_DESCRIPTION VARCHAR2(5000) CONSTRAINT NN_JOB_REQUISITION_JOB_DESCRIPTION NOT NULL,
        DATE_POSTED TIMESTAMP WITH LOCAL TIME ZONE DEFAULT SYSDATE CONSTRAINT NN_JOB_REQUISITION_DATE_POSTED NOT NULL,
        APPLICATION_DEADLINE TIMESTAMP WITH LOCAL TIME ZONE,
        EXPECTED_START_DATE TIMESTAMP WITH LOCAL TIME ZONE,
        RELOCATION_ALLOWANCE NUMBER(1) DEFAULT 0 CONSTRAINT CHK_JOB_REQUISITION_RELOCATION_ALLOWANCE CHECK(RELOCATION_ALLOWANCE IN (0,1)),
        STATUS VARCHAR2(20) DEFAULT ''open'' CONSTRAINT NN_JOB_REQUISITION_STATUS NOT NULL,
        CONSTRAINT FK_JOB_REQUISITION_COMPANYID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(COMPANY_ID),
        CONSTRAINT FK_JOB_REQUISITION_RECRUITERID FOREIGN KEY (RECRUITER_ID) REFERENCES RECRUITERS(RECRUITER_ID),
        CONSTRAINT CHK_JOB_REQUISITION_JOB_REQ_STATUS CHECK (STATUS IN (''cancelled'', ''closed'', ''open'')),
        CONSTRAINT CHK_JOB_REQUISITION_APP_DEADLINE_CHK CHECK (APPLICATION_DEADLINE > DATE_POSTED),
        CONSTRAINT CHK_JOB_REQUISITION_EXP_START_DATE CHECK (EXPECTED_START_DATE > DATE_POSTED and EXPECTED_START_DATE > DATE_POSTED)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "JOB_REQUISITION" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/


-- CANDIDATE_APPLICATION Join Table cleanup with creation
DECLARE 
    ROWS_COUNT NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO ROWS_COUNT
    FROM USER_TABLES
    WHERE TABLE_NAME = 'CANDIDATE_APPLICATION';
    
    IF ROWS_COUNT > 0 THEN 
        EXECUTE IMMEDIATE 'DROP TABLE CANDIDATE_APPLICATION CASCADE CONSTRAINTS';
        DBMS_OUTPUT.PUT_LINE('Table "CANDIDATE_APPLICATION" dropped.');
    END IF;
    
    EXECUTE IMMEDIATE 'CREATE TABLE CANDIDATE_APPLICATION (
        CAN_APP_ID NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_CANDIDATE_APPLICATION PRIMARY KEY,
        CANDIDATE_ID NUMBER CONSTRAINT NN_CANDIDATE_APPLICATION_CAN_ID NOT NULL,
        REQ_ID NUMBER CONSTRAINT NN_CANDIDATE_APPLICATION_REQ_ID NOT NULL,
        RESUME_ID NUMBER CONSTRAINT NN_CANDIDATE_APPLICATION_RESUME_ID NOT NULL, 
        DATE_APPLIED TIMESTAMP WITH LOCAL TIME ZONE DEFAULT SYSDATE CONSTRAINT NN_CANDIDATE_APPLICATION_DATE_APPLIED NOT NULL,
        STATUS VARCHAR2(30) DEFAULT ''draft'' CONSTRAINT NN_CANDIDATE_APPLICATION_STATUS NOT NULL,
        WILLING_TO_RELOCATE NUMBER(1) DEFAULT 1 CONSTRAINT CHK_CANDIDATE_APPLICATION_WILLING_TO_RELOCATE CHECK (WILLING_TO_RELOCATE IN (0,1)),
        CONSTRAINT FK_CANDIDATE_APPLICATION_CAN_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES CANDIDATES(CANDIDATE_ID),
        CONSTRAINT FK_CANDIDATE_APPLICATION_REQ_ID FOREIGN KEY (REQ_ID) REFERENCES JOB_REQUISITION(REQ_ID),
        CONSTRAINT UQ_CANDIDATE_APPLICATION_CANID_REQID UNIQUE (CANDIDATE_ID, REQ_ID),
        CONSTRAINT CHK_CANDIDATE_APPLICATION_STATUS CHECK (STATUS IN (''draft'', ''candidate rejected'', ''in review'', ''offer accepted'', ''offer rejected'', 
        ''requisition closed/ transfered'', ''role offered'', ''submitted'', ''withdrawn'')),
        CONSTRAINT FK_CANDIDATE_APPLICATION_RESUME_ID FOREIGN KEY (RESUME_ID) REFERENCES RESUME(RESUME_ID)
    )';
    DBMS_OUTPUT.PUT_LINE('Table "CANDIDATE_APPLICATION" created successfully.');
EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Something went wrong: Error Code ' || SQLCODE || ' - ' || SQLERRM);
END;
/